apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: u-m44hajazl7
    field.cattle.io/publicEndpoints: '[{"port":80,"protocol":"HTTP","serviceName":"{{NAMESPACE}}:get-cert","ingressName":"{{NAMESPACE}}:lb","hostname":"{{CERT_HOST_NAME}}","allNodes":true}]'
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-{{NAMESPACE}}-get-cert
  name: get-cert
  selfLink: /apis/apps/v1/namespaces/{{NAMESPACE}}/deployments/get-cert
spec:
  paused: false
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-{{NAMESPACE}}-get-cert
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2021-02-05T17:00:51Z"
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"get-cert-nodeport","hostPort":0,"kind":"NodePort","name":"web","protocol":"TCP"}]]'
      labels:
        workload.user.cattle.io/workloadselector: deployment-{{NAMESPACE}}-get-cert
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - sleep infinity
        image: certbot/certbot:nightly
        imagePullPolicy: IfNotPresent
        name: get-cert
        ports:
          - containerPort: 80
            name: web
            protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
status: {}
